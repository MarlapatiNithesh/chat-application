# syntax=docker/dockerfile:1

# --- Stage 1: Build the application ---
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy and install dependencies
COPY package*.json ./
RUN npm install

# Copy environment variables (ensure it's in the build context)
COPY .env ./

# Copy all source code
COPY . .

# (Optional) If you have a build script (e.g., Babel or bundling)
# If you donâ€™t have a build step, you can skip this and remove all /dist references
RUN npm run build

# Remove development dependencies
RUN npm prune --omit=dev

# --- Stage 2: Create the production image ---
FROM node:18-alpine AS runner

# Set working directory
WORKDIR /app

# Copy only required files from builder
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/public ./public
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/.env ./

# Set environment variable
ENV NODE_ENV=production

# Expose the port your app runs on (default for Express)
EXPOSE 3000

# Start the app
CMD ["npm", "run", "start"]
